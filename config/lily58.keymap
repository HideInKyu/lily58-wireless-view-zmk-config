/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    tapping-term-ms = <170>;
    flavor = "tap-preferred";
};

/ {
    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(C)>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(V)>;
            label = "PASTE";
        };

        newterminal: newterminal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(GRAVE))>;
            label = "NEWTERMINAL";
        };

        undo: undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(Z)>;
            label = "UNDO";
        };

        redo: redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(RG(Z))>;
            label = "REDO";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(X)>;
            label = "CUT";
        };

        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(R) &kp O &kp Y &kp S &kp B &kp A &kp E &kp N2 &kp N1 &kp EXCL>;
            label = "NEW_MACRO";
        };

        new_macro2: new_macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(H) &kp I &kp D &kp E &kp I &kp N &kp H &kp E &kp R &kp E &kp N2 &kp N1 &kp EXCL>;
            label = "NEW_MACRO2";
        };

        new_macro3: new_macro3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(R) &kp O &kp Y &kp S &kp B &kp A &kp E &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "NEW_MACRO3";
        };
    };

    behaviors {
        mouseAkey: mouseAkey {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUSEAKEY";
            bindings = <&mkp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&mt LC(LS(GRAVE)) GRAVE  &kp N1       &kp N2       &kp N3        &kp N4            &kp N5                                                 &kp N6  &kp N7       &kp N8       &kp N9       &kp N0                  &mt EQUAL MINUS
&kp TAB                  &kp Q        &mt LG(W) W  &mt LG(F) F   &kp P             &kp G                                                  &kp J   &mt LG(L) L  &mt LG(U) U  &mt LG(Y) Y  &mt LG(SEMI) SEMICOLON  &mt RIGHT_BRACKET LEFT_BRACKET
&mt LEFT_GUI ESCAPE      &mt LG(A) A  &mt LG(R) R  &mt LG(S) S   &mt LG(T) T       &mt LG(D) D                                            &kp H   &mt LG(N) N  &kp E        &mt LG(I) I  &kp O                   &kp SQT
&kp LSHFT                &mt LG(Z) Z  &mt LG(X) X  &mt LG(C) C   &mt LG(V) V       &mt LG(B) B  &to 3        &to 3                        &kp K   &kp M        &kp COMMA    &kp DOT      &kp FSLH                &kp RIGHT_SHIFT
                                                   &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 2 SPACE  &kp ENTER    &mt LG(BACKSPACE) BACKSPACE  &mo 1   &none        &none
            >;
        };

        layer_1 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                    &kp F7        &kp F8             &kp F9    &kp F10              &kp F11        &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                    &trans        &trans             &kp UP    &trans               &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LG(LEFT)  &mt LA(LEFT) LEFT  &kp DOWN  &mt LA(RIGHT) RIGHT  &kp LG(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans             &trans    &trans               &trans         &trans
                        &trans  &trans  &trans  &trans    &trans  &trans        &trans             &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                    &kp F7     &kp F8        &kp F9      &kp F10       &kp F11    &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                    &kp ASTRK  &kp N7        &kp N8      &kp N9        &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PLUS   &kp N4        &kp N5      &kp N6        &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp MINUS  &kp NUMBER_1  &kp N2      &kp NUMBER_3  &kp SLASH  &kp ENTER
                        &trans  &trans  &trans  &trans    &trans  &lt 1 N0   &trans        &kp PERIOD
            >;
        };

        layer_3 {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                            &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                             &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSLH
&kp ESC    &kp A   &kp S   &kp D     &kp F     &kp G                             &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B      &to 0        &to 0     &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LALT  &kp LGUI  &kp SPACE  &kp ENTER    &kp BSPC  &mo 1   &trans  &trans
            >;
        };
    };
};
